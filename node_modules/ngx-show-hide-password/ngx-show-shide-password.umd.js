(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/forms', '@angular/common'], factory) :
	(factory((global['ngx-show-shide-password'] = {}),global._angular_core,global._angular_forms,global._angular_common));
}(this, (function (exports,_angular_core,_angular_forms,_angular_common) { 'use strict';

/**
 * Add a split input button to password or text input. Toggles input type between "text" and "password".
 *
 * \@example
 * <show-hide-password size="sm|lg">
 * <input type="password" name=... />
 * </show-hide-password>
 */
var ShowHidePasswordComponent = (function () {
    /**
     * @param {?} elem
     * @param {?} renderer
     */
    function ShowHidePasswordComponent(elem, renderer) {
        this.elem = elem;
        this.renderer = renderer;
    }
    /**
     * init component
     * @return {?}
     */
    ShowHidePasswordComponent.prototype.ngOnInit = function () {
        this.input = this.elem.nativeElement.querySelector('input');
        this.renderer.addClass(this.elem.nativeElement, 'input-group');
        if (this.size === 'sm') {
            this.renderer.addClass(this.elem.nativeElement, 'input-group-sm');
        }
        else if (this.size === 'lg') {
            this.renderer.addClass(this.elem.nativeElement, 'input-group-lg');
        }
        this.isHidden = this.input.type === 'password';
    };
    /**
     * toggles type of input (text|password)
     * @param {?} $event not used
     * @return {?}
     */
    ShowHidePasswordComponent.prototype.toggleShow = function ($event) {
        this.isHidden = !this.isHidden;
        this.renderer.setAttribute(this.input, 'type', this.isHidden ? 'password' : 'text');
    };
    return ShowHidePasswordComponent;
}());
ShowHidePasswordComponent.decorators = [
    { type: _angular_core.Component, args: [{
                selector: 'show-hide-password',
                template: "\n    <ng-content></ng-content>\n    <span *ngIf=\"icon\" class=\"input-group-btn\">\n      <button class=\"btn btn-secondary\" type=\"button\" (click)=\"toggleShow($event)\"\n      [attr.title]=\"isHidden ? 'Show password' : 'Hide password'\" [ngSwitch]=\"icon\">\n        <span *ngSwitchCase=\"'entypo'\" class=\"icon\"\n          [ngClass]=\"{'icon-eye-with-line': !isHidden, 'icon-eye': isHidden}\"\n          [style.font-size]=\"size === 'lg' ? '1.5rem' : ''\"></span>\n        <i *ngSwitchDefault class=\"fa fa-fw\"\n          [ngClass]=\"{'fa-eye-slash': !isHidden, 'fa-eye': isHidden, 'fa-lg': size === 'lg'}\"></i>\n      </button>\n    </span>\n    <span *ngIf=\"!icon\" class=\"input-group-addon\">\n      <input type=\"checkbox\" class=\"\" (click)=\"toggleShow($event)\" [attr.title]=\"isHidden ? 'Show password' : 'Hide password'\">\n    </span>\n  "
            },] },
];
/**
 * @nocollapse
 */
ShowHidePasswordComponent.ctorParameters = function () { return [
    { type: _angular_core.ElementRef, },
    { type: _angular_core.Renderer2, },
]; };
ShowHidePasswordComponent.propDecorators = {
    'size': [{ type: _angular_core.Input },],
    'icon': [{ type: _angular_core.Input },],
};

var ShowHidePasswordModule = (function () {
    function ShowHidePasswordModule() {
    }
    /**
     * @return {?}
     */
    ShowHidePasswordModule.forRoot = function () {
        return {
            ngModule: ShowHidePasswordModule
            // , providers: [SampleService]
        };
    };
    return ShowHidePasswordModule;
}());
ShowHidePasswordModule.decorators = [
    { type: _angular_core.NgModule, args: [{
                imports: [_angular_common.CommonModule, _angular_forms.FormsModule],
                exports: [ShowHidePasswordComponent],
                declarations: [ShowHidePasswordComponent]
            },] },
];
/**
 * @nocollapse
 */
ShowHidePasswordModule.ctorParameters = function () { return []; };

exports.ShowHidePasswordModule = ShowHidePasswordModule;
exports.ShowHidePasswordComponent = ShowHidePasswordComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
