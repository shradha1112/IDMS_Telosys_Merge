var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef, ViewContainerRef, Renderer2, Injector, ChangeDetectionStrategy, forwardRef, ContentChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ComponentBase, ComponentMixins, FormBase, setValue } from '@syncfusion/ej2-angular-base';
import { DropDownList } from '@syncfusion/ej2-dropdowns';
import { Template } from '@syncfusion/ej2-angular-base';
export var inputs = ['actionFailureTemplate', 'allowFiltering', 'cssClass', 'dataSource', 'enablePersistence', 'enableRtl', 'enabled', 'fields', 'filterBarPlaceholder', 'floatLabelType', 'footerTemplate', 'groupTemplate', 'headerTemplate', 'htmlAttributes', 'ignoreAccent', 'index', 'itemTemplate', 'locale', 'noRecordsTemplate', 'placeholder', 'popupHeight', 'popupWidth', 'query', 'readonly', 'showClearButton', 'sortOrder', 'text', 'value', 'valueTemplate', 'width', 'zIndex'];
export var outputs = ['actionBegin', 'actionComplete', 'actionFailure', 'beforeOpen', 'blur', 'change', 'close', 'created', 'dataBound', 'destroyed', 'filtering', 'focus', 'open', 'select', 'valueChange'];
export var twoWays = ['value'];
/**
*The DropDownList component contains a list of predefined values, from which the user can choose a single value.
*```html
*<ejs-dropdownlist></ejs-dropdownlist>
*```
*/
var DropDownListComponent = /** @class */ (function (_super) {
    __extends(DropDownListComponent, _super);
    function DropDownListComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.skipFromEvent = true;
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        _this.registerEvents(outputs);
        _this.addTwoWay.call(_this, twoWays);
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
    }
    DropDownListComponent_1 = DropDownListComponent;
    DropDownListComponent.prototype.registerOnChange = function (registerFunction) {
    };
    DropDownListComponent.prototype.registerOnTouched = function (registerFunction) {
    };
    DropDownListComponent.prototype.writeValue = function (value) {
    };
    DropDownListComponent.prototype.setDisabledState = function (disabled) {
    };
    DropDownListComponent.prototype.ngOnInit = function () {
    };
    DropDownListComponent.prototype.ngAfterViewInit = function () {
    };
    DropDownListComponent.prototype.ngOnDestroy = function () {
    };
    DropDownListComponent.prototype.ngAfterContentChecked = function () {
    };
    DropDownListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ejs-dropdownlist',
                    inputs: inputs,
                    outputs: outputs,
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return DropDownListComponent_1; }),
                            multi: true
                        }
                    ],
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    DropDownListComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
        { type: ViewContainerRef, },
        { type: Injector, },
    ]; };
    DropDownListComponent.propDecorators = {
        'footerTemplate': [{ type: ContentChild, args: ['footerTemplate',] },],
        'headerTemplate': [{ type: ContentChild, args: ['headerTemplate',] },],
        'valueTemplate': [{ type: ContentChild, args: ['valueTemplate',] },],
        'groupTemplate': [{ type: ContentChild, args: ['groupTemplate',] },],
        'itemTemplate': [{ type: ContentChild, args: ['itemTemplate',] },],
        'noRecordsTemplate': [{ type: ContentChild, args: ['noRecordsTemplate',] },],
        'actionFailureTemplate': [{ type: ContentChild, args: ['actionFailureTemplate',] },],
    };
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DropDownListComponent.prototype, "footerTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DropDownListComponent.prototype, "headerTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DropDownListComponent.prototype, "valueTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DropDownListComponent.prototype, "groupTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DropDownListComponent.prototype, "itemTemplate", void 0);
    __decorate([
        Template('No Records Found'),
        __metadata("design:type", Object)
    ], DropDownListComponent.prototype, "noRecordsTemplate", void 0);
    __decorate([
        Template('The Request Failed'),
        __metadata("design:type", Object)
    ], DropDownListComponent.prototype, "actionFailureTemplate", void 0);
    DropDownListComponent = DropDownListComponent_1 = __decorate([
        ComponentMixins([ComponentBase, FormBase]),
        __metadata("design:paramtypes", [ElementRef, Renderer2, ViewContainerRef, Injector])
    ], DropDownListComponent);
    return DropDownListComponent;
    var DropDownListComponent_1;
}(DropDownList));
export { DropDownListComponent };
//# sourceMappingURL=dropdownlist.component.js.map