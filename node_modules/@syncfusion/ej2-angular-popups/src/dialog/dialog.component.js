var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef, ViewContainerRef, Renderer2, Injector, ChangeDetectionStrategy, ContentChild } from '@angular/core';
import { ComponentBase, ComponentMixins, setValue } from '@syncfusion/ej2-angular-base';
import { Dialog } from '@syncfusion/ej2-popups';
import { Template } from '@syncfusion/ej2-angular-base';
import { ButtonsDirective } from './buttons.directive';
export var inputs = ['allowDragging', 'animationSettings', 'buttons', 'closeOnEscape', 'content', 'cssClass', 'enablePersistence', 'enableResize', 'enableRtl', 'footerTemplate', 'header', 'height', 'isModal', 'locale', 'position', 'showCloseIcon', 'target', 'visible', 'width', 'zIndex'];
export var outputs = ['beforeClose', 'beforeOpen', 'close', 'created', 'drag', 'dragStart', 'dragStop', 'open', 'overlayClick', 'resizeStart', 'resizeStop', 'resizing', 'visibleChange'];
export var twoWays = ['visible'];
/**
 * Represents the Angular Dialog Component
 * ```html
 * <ejs-dialog></ejs-dialog>
 * ```
 */
var DialogComponent = /** @class */ (function (_super) {
    __extends(DialogComponent, _super);
    function DialogComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.tags = ['buttons'];
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        _this.registerEvents(outputs);
        _this.addTwoWay.call(_this, twoWays);
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
    }
    DialogComponent.prototype.ngOnInit = function () {
    };
    DialogComponent.prototype.ngAfterViewInit = function () {
    };
    DialogComponent.prototype.ngOnDestroy = function () {
    };
    DialogComponent.prototype.ngAfterContentChecked = function () {
    };
    DialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ejs-dialog',
                    inputs: inputs,
                    outputs: outputs,
                    template: "<ng-content ></ng-content>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    queries: {
                        childButtons: new ContentChild(ButtonsDirective)
                    }
                },] },
    ];
    /** @nocollapse */
    DialogComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
        { type: ViewContainerRef, },
        { type: Injector, },
    ]; };
    DialogComponent.propDecorators = {
        'footerTemplate': [{ type: ContentChild, args: ['footerTemplate',] },],
        'header': [{ type: ContentChild, args: ['header',] },],
        'content': [{ type: ContentChild, args: ['content',] },],
    };
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DialogComponent.prototype, "footerTemplate", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DialogComponent.prototype, "header", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], DialogComponent.prototype, "content", void 0);
    DialogComponent = __decorate([
        ComponentMixins([ComponentBase]),
        __metadata("design:paramtypes", [ElementRef, Renderer2, ViewContainerRef, Injector])
    ], DialogComponent);
    return DialogComponent;
}(Dialog));
export { DialogComponent };
//# sourceMappingURL=dialog.component.js.map