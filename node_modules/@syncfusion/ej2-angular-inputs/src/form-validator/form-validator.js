import { FormValidator } from '@syncfusion/ej2-inputs';
var FormValidators = /** @class */ (function () {
    function FormValidators() {
    }
    //max validation
    FormValidators.max = function (number) {
        var max = number;
        return function (control) {
            //tslint:disable-next-line
            var result = FormValidator.checkValidator.max({ value: control.value, param: max });
            if (result === true) {
                return null;
            }
            else {
                return { 'max': true };
            }
        };
    };
    // min validation
    FormValidators.min = function (number) {
        var min = number;
        return function (control) {
            //tslint:disable-next-line
            var result = FormValidator.checkValidator.min({ value: control.value, param: min });
            if (result === true) {
                return null;
            }
            else {
                return { 'min': true };
            }
        };
    };
    // Credit card validation
    FormValidators.creditcard = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.creditcard({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'cardno': true };
        }
    };
    // date validation
    FormValidators.date = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.date({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'date': true };
        }
    };
    // Date-ISO validation
    FormValidators.dateIso = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.dateIso({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'dateiso': true };
        }
    };
    // Digit validation
    FormValidators.digits = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.digits({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'digit': true };
        }
    };
    // Email validation
    FormValidators.email = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.email({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'email': true };
        }
    };
    //maxlength validation
    FormValidators.maxLength = function (number) {
        var maxlength = number;
        return function (control) {
            //tslint:disable-next-line
            var result = FormValidator.checkValidator.maxLength({ value: control.value, param: maxlength });
            if (result === true) {
                return null;
            }
            else {
                return { 'maxlength': true };
            }
        };
    };
    //minlength validation
    FormValidators.minLength = function (number) {
        var minlength = number;
        return function (control) {
            //tslint:disable-next-line
            var result = FormValidator.checkValidator.minLength({ value: control.value, param: minlength });
            if (result === true) {
                return null;
            }
            else {
                return { 'minlength': true };
            }
        };
    };
    //number validation
    FormValidators.number = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.number({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'number': true };
        }
    };
    // required validation
    FormValidators.required = function (control) {
        //tslint:disable-next-line
        var result = (control.value === null) ? false : FormValidator.checkValidator.required({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'required': true };
        }
    };
    // Telephone number validation
    FormValidators.tel = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.tel({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'telno': true };
        }
    };
    // Url validation
    FormValidators.url = function (control) {
        //tslint:disable-next-line
        var result = FormValidator.checkValidator.url({ value: control.value });
        if (result === true) {
            return null;
        }
        else {
            return { 'url': true };
        }
    };
    // RangeLength validation
    FormValidators.rangeLength = function (number1, number2) {
        var minRL = number1;
        var maxRL = number2;
        //tslint:disable-next-line
        var param = [minRL, maxRL];
        return function (control) {
            //tslint:disable-next-line
            var result = FormValidator.checkValidator.rangeLength({ value: control.value, param: param });
            if (result === true) {
                return null;
            }
            else {
                return { 'rangelength': true };
            }
        };
    };
    // Range validation
    FormValidators.range = function (number1, number2) {
        var minR = number1;
        var maxR = number2;
        //tslint:disable-next-line
        var param1 = [minR, maxR];
        return function (control) {
            //tslint:disable-next-line
            var result = FormValidator.checkValidator.range({ value: control.value, param: param1 });
            if (result === true) {
                return null;
            }
            else {
                return { 'range': true };
            }
        };
    };
    return FormValidators;
}());
export { FormValidators };
//# sourceMappingURL=form-validator.js.map