import { Injectable } from '@angular/core';
import { Http, Response, Headers, URLSearchParams, RequestOptions } from '@angular/http';
import { Observable } from 'rxjs';
import { AppSettings } from 'app/appsettings';
import { EncounterQuestionGroup } from 'app/patients/models/encounterQuestionGroup';


@Injectable()
export class EncounterQuestionGroupService {
    insertAllQuestionGroupsUrl = AppSettings.API_ENDPOINT + "./encounterQuestionGroup/createEncounterQuestionGroup";
    deleteEncQustionGroupUrl = AppSettings.API_ENDPOINT + "./encounterQuestionGroup/deleteQuestionGroups";
    constructor(private http: Http) { }


    insertQuestionGroups(encounterQuestionGroup: EncounterQuestionGroup[]): Observable<number> {
        let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
        let options = new RequestOptions({ headers: cpHeaders });
        return this.http.post(this.insertAllQuestionGroupsUrl, encounterQuestionGroup, options)
            .map(success => success.status)
            .catch(this.handleError);
    }


    deleteEncQustionGroups(encounterId:number,sysName:string):Observable<number> {
        let cpHeaders = new Headers({ 'Content-Type': 'application/json' , "x-auth-token":localStorage.getItem('jwt')});
		let cpParams = new URLSearchParams();
        cpParams.set('encounterId', encounterId.toString());
        cpParams.set('sysType', sysName.toString());
		let options = new RequestOptions({ headers: cpHeaders, params: cpParams });
        return this.http.delete(this.deleteEncQustionGroupUrl, options)
        .map(success => success.status)
               .catch(this.handleError);
    }
    private extractData(res: Response) {
        let body = res.json();
        return body;
    }

    private handleError(error: Response | any) {
        console.error(error.message || error);
        return Observable.throw(error.status);
    }
}