import { Injectable } from '@angular/core';
import { Http, Response, Headers, URLSearchParams, RequestOptions } from '@angular/http';
import { Observable } from 'rxjs';
import { AppSettings } from '../../appsettings';
import { PatientDetails } from '../models/PatientDetails';
import { PatientRecord } from 'app/patients/models/PatientRecord';

@Injectable()
export class PatientDetailsService {
	//URLs for CRUD operations
	addPatientDetailsUrl = AppSettings.API_ENDPOINT + "./patients/createPatientDetails";
	getAllPatientsUrl = AppSettings.API_ENDPOINT + "./patients/getListOfActivePatientsfromsView";
	getPatientByPatientIdUrl = AppSettings.API_ENDPOINT + "./patients/getPatientByPatientId";
	updatePatientDetailsUrl = AppSettings.API_ENDPOINT + "./patients/modifyPatientDetails";
    getPatientRecordByPatientIdUrl = AppSettings.API_ENDPOINT + "./patients/getPatientRecordByPatientId";
	//Create constructor to get Http instance
	constructor(private http: Http) {
	}

	inserPatientDetails(patientDetails: PatientDetails): Observable<PatientDetails> {
		let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
		let options = new RequestOptions({ headers: cpHeaders });
		return this.http.post(this.addPatientDetailsUrl, patientDetails, options)
			.map(this.extractData)
			.catch(this.handleError);
	}

	getAllPatients(): Observable<PatientRecord[]> {
		let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
		let options = new RequestOptions({ headers: cpHeaders });
		return this.http.get(this.getAllPatientsUrl, options)
			.map(this.extractData)
			.catch(this.handleError);
	}

	getPatientRecordsByPatientId(patientId: number): Observable<PatientRecord> {
		let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
		let cpParams = new URLSearchParams();
		cpParams.set('patientId', patientId.toString());
		let options = new RequestOptions({ headers: cpHeaders, params: cpParams });
		return this.http.get(this.getPatientRecordByPatientIdUrl, options)
			.map(this.extractData)
			.catch(this.handleError);
	}

	getPatientDetailsByPatientId(patientId: number): Observable<PatientDetails> {
		let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
		let cpParams = new URLSearchParams();
		cpParams.set('patientId', patientId.toString());
		let options = new RequestOptions({ headers: cpHeaders, params: cpParams });
		return this.http.get(this.getPatientByPatientIdUrl, options)
			.map(this.extractData)
			.catch(this.handleError);
	}

	updatePatientDetails(patientDetails: PatientDetails): Observable<PatientDetails> {
		let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
		let options = new RequestOptions({ headers: cpHeaders });
		return this.http.put(this.updatePatientDetailsUrl, patientDetails, options)
			.map(this.extractData)
			.catch(this.handleError);
	}

	private extractData(res: Response) {
		let body = res.json();
		return body;
	}
	private handleError(error: Response | any) {
		console.error(error.message || error);
		return Observable.throw(error.status);
	}
}