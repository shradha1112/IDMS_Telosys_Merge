package com.cpa.ehr.service.system.impl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cpa.ehr.backend.dao.system.EncQuestionOptionRepository;
import com.cpa.ehr.backend.dao.system.entities.EncQuestionOption;
import com.cpa.ehr.backend.dao.system.entities.Encounter;
import com.cpa.ehr.service.system.EncQuestionOptionService;
import com.cpa.ehr.service.system.dto.EncQuestionOptionDTO;
import com.cpa.ehr.service.system.dto.mapper.EncQuestionOptionMapper;


@Service
public class EncQuestionOptionServiceImpl implements EncQuestionOptionService{
	private static final Logger LOG = LoggerFactory.getLogger(EncQuestionOptionServiceImpl.class);
	@Autowired
	private EncQuestionOptionMapper encQuestionOptionMapper;
	
	@Autowired
	private EncQuestionOptionRepository encQuestionOptionRepository;
	
	/**
	 * Persists encQuestionOption information in database
	 * 
	 * @param encQuestionOptionDTO
	 * 		DTO of the encQuestionOptionDTO to be persisted in DB
	 * @return encQuestionOptionDTO
	 * 		DTO of the created entity
	 */
	
	@Override
	public EncQuestionOptionDTO persistEncounterQuestionOption(EncQuestionOptionDTO encQuestionOptionDTO) {
		if (encQuestionOptionDTO != null ) {
		
			EncQuestionOption newEncounterQuestionOption = encQuestionOptionMapper.encQuestionOptionDTOToEntity(encQuestionOptionDTO);
			EncQuestionOption createdEncounterQuestionOption = encQuestionOptionRepository.save(newEncounterQuestionOption); 
				return (createdEncounterQuestionOption != null) ? encQuestionOptionMapper.entityToEncQuestionOptionDTO(createdEncounterQuestionOption) : null;

		}
		return null;
	}
	
	@Override
	public void removeQuestionOptions(Long encounterId,String sysType) {
		// TODO Auto-generated method stub
		try {
			//encQuestionOptionRepository.de
			encQuestionOptionRepository.deleteByEncounterIdAndSysType(encounterId,sysType);
		}
		catch(Exception e) {
			LOG.error("Error while removing Encounter {}" ,e);
		}
	}
}
