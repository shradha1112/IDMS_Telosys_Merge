/*
 * Created on 2019-04-25 ( Date ISO 2019-04-25 - Time 10:19:39 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */
package com.cpa.ehr.web.rest.system;




import java.util.List;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cpa.ehr.backend.dao.admin.entities.StaffMember;
import com.cpa.ehr.service.admin.EHRBaseService;
import com.cpa.ehr.service.system.dto.EncQuestionOptionDTO;
import com.cpa.ehr.service.system.dto.PatientAllergyDTO;
import com.cpa.ehr.service.system.dto.PatientMedicationDTO;
import com.cpa.ehr.service.system.impl.PatientAllergyServiceImpl;
import com.cpa.ehr.util.FormatConverterUtils;

/**
 * Rest controller which produce Hal+json content (including hateoas metadata).

 */
@RestController
@RequestMapping("/api/rest/allergy")
@CrossOrigin(origins = { "http://localhost:4300" })
public class PatientAllergyWebService {

	private static final Logger LOG = LoggerFactory.getLogger( PatientAllergyWebService.class);

	@Autowired
	private EHRBaseService ehrBaseService;

	@Autowired  
	com.cpa.ehr.service.system.PatientAllergyService patientallergyService;


	@PostMapping("/createPatientAllergy")
	public ResponseEntity<PatientAllergyDTO> insertPatientAllergy(@Valid @RequestBody List<PatientAllergyDTO> patientAllergyDTO,
			BindingResult result){	
		HttpHeaders headers = new HttpHeaders();
		StaffMember loginUser = ehrBaseService.currentUser();
		for (PatientAllergyDTO patientAllergyDTOObj : patientAllergyDTO) {
			FormatConverterUtils.setInitialDefaultValues(patientAllergyDTOObj, loginUser);
			patientallergyService.persistPatientAllergy(patientAllergyDTOObj);
		}
		return new ResponseEntity<>(headers, HttpStatus.CREATED);
	}

	@GetMapping("/getAllPatientAllergy")
	public ResponseEntity<List<PatientAllergyDTO>> getPatientAllergyByPatientId(@RequestParam("patientId") Long patientId) {
		List<PatientAllergyDTO> patientAllergyDTOResp=null;
		try {
			patientAllergyDTOResp = patientallergyService.retrieveByPatientId(patientId);

		} catch (Exception e) {
			LOG.error("Error while retrieving all  PatientAllergy {}",e);
		}
		return new ResponseEntity<>(patientAllergyDTOResp, HttpStatus.OK);
	}

	@DeleteMapping("/deletePatientAllergy")
	public ResponseEntity<Void> deletePatientAllergy(@RequestParam("patientAllergyId") Long patientAllergyId) {
		patientallergyService.deletePatientAllergy(patientAllergyId);
		HttpHeaders headers= new HttpHeaders();
		return new ResponseEntity<>(headers, HttpStatus.NO_CONTENT);
	}	
	
}










