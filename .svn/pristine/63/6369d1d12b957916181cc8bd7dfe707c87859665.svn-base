/*
 * Created on 2019-05-02 ( Date ISO 2019-05-02 - Time 11:00:43 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */
package com.cpa.ehr.service.system.impl;

import java.util.Collections;
import java.util.List;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cpa.ehr.backend.dao.system.PatientPreventiveCareRepository;
import com.cpa.ehr.backend.dao.system.entities.PatientPreventiveCare;
import com.cpa.ehr.service.system.PatientPreventiveCareService;
import com.cpa.ehr.service.system.dto.PatientPreventiveCareDTO;
import com.cpa.ehr.service.system.dto.mapper.PatientPreventiveCareMapper;

@Service
public class PatientPreventiveCareServiceImpl implements PatientPreventiveCareService {

	private static final Logger LOG = Logger.getLogger(PatientPreventiveCareServiceImpl.class);

	@Autowired
	private PatientPreventiveCareRepository patientPreventiveCareRepository;

	@Autowired
	private PatientPreventiveCareMapper patientPreventiveCareMapper;


	public PatientPreventiveCareDTO persistPatientPreventiveCare(PatientPreventiveCareDTO patientPreventiveCareDTOpersist){
		try{
			if(patientPreventiveCareDTOpersist !=null){
				PatientPreventiveCare patientPreventiveCare = patientPreventiveCareMapper.convertPatientPreventiveCareDTOToEntity(patientPreventiveCareDTOpersist);
				PatientPreventiveCare patientPreventiveCareIn =  patientPreventiveCareRepository.saveAndFlush(patientPreventiveCare);
				return (patientPreventiveCareIn !=null) ?  patientPreventiveCareMapper.convertEntityToPatientPreventiveCareDTO(patientPreventiveCareIn) : null;
			}
		}
		catch (Exception e){
			LOG.error("Error while inserting PatientPreventiveCare {} ", e);
		}
		return null;
	}

	public List<PatientPreventiveCareDTO> retrievePatientPreventiveCareById(Long patientId)
	{
		try {
			
			List<PatientPreventiveCare> patientPreventiveCareList = patientPreventiveCareRepository.findPatientPrevByPatientId(patientId);
			return( patientPreventiveCareList != null) ?  patientPreventiveCareMapper.entityListToPatientPreventiveCareDTOList(patientPreventiveCareList) : null;
		}
		catch (Exception e){
			LOG.error("Error message",e);
		}
		return Collections.emptyList();

	}

	public List<PatientPreventiveCareDTO> retrieveAllPatientPreventiveCare(){
		try {
			List<PatientPreventiveCare> patientPreventiveCareList = patientPreventiveCareRepository.findAll();
			return( patientPreventiveCareList != null) ?  patientPreventiveCareMapper.entityListToPatientPreventiveCareDTOList(patientPreventiveCareList) : null;
		}
		catch (Exception e){
			LOG.error("Error message",e);
		}
		return Collections.emptyList();

	}

	public 	PatientPreventiveCareDTO modifyPatientPreventiveCare(PatientPreventiveCareDTO patientPreventiveCareDTOUpdate){
		//		}
		return null;
	}




}











