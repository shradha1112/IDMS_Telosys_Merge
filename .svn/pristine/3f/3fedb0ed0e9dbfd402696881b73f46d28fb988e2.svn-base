import { Injectable } from '@angular/core';
import { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';
import { Observable } from 'rxjs';
import { AppSettings } from '../../appsettings';
import { EncounterHistoryRecord } from 'app/patients/models/encounterHistoryRecord';
import { EncounterHistory } from 'app/patients/models/encounterHistory';

@Injectable()
export class EncounterHistoryService {
    
    getAllEncounterByEncIdUrl = AppSettings.API_ENDPOINT + "./encounterHistory/getAllEncounterByEncounterId";
    getAllEncounterListByEncIdUrl = AppSettings.API_ENDPOINT + "./encounterHistory/getEncounterListByEncounterId";

    constructor(private http: Http) { }

    //get all encounters by patientId 
    getEncounterByEncounterId(encounterId: number): Observable<EncounterHistoryRecord[]> {
        let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
        let cpParams = new URLSearchParams();
        cpParams.set('encounterId', encounterId.toString());
        let options = new RequestOptions({ headers: cpHeaders, params: cpParams });
        return this.http.get(this.getAllEncounterByEncIdUrl, options)
            .map(this.extractData)
            .catch(this.handleError);
    }
    getEncounterListEncounterId(encounterId: number,type:any): Observable<EncounterHistory[]> {
        console.log(type)
        let cpHeaders = new Headers({ 'Content-Type': 'application/json', "x-auth-token": localStorage.getItem('jwt') });
        let cpParams = new URLSearchParams();
        cpParams.set('encounterId', encounterId.toString());
        let options = new RequestOptions({ headers: cpHeaders, params: cpParams });
        return this.http.get(this.getAllEncounterListByEncIdUrl, options)
          .map(data=>{
            let allData: EncounterHistory[] = data.json();
            return allData.filter(d => d.systemType==type);
           })
            .catch(this.handleError);
    }
    private extractData(res: Response) {
        console.log(res.toString())
        let body = res.json();
        return body;
    }

    private handleError(error: Response | any) {
        console.error(error.message || error);
        return Observable.throw(error.status);
    }
}